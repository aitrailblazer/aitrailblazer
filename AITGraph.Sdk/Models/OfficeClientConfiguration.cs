// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AITGraph.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class OfficeClientConfiguration : global::AITGraph.Sdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The list of group assignments for the policy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.OfficeClientConfigurationAssignment>? Assignments { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.OfficeClientConfigurationAssignment> Assignments { get; set; }
#endif
        /// <summary>List of office Client check-in status.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.OfficeClientCheckinStatus>? CheckinStatuses { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.OfficeClientCheckinStatus> CheckinStatuses { get; set; }
#endif
        /// <summary>Not yet documented</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Admin provided description of the office client configuration policy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>Policy settings JSON string in binary format, these values cannot be changed by the user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public byte[]? PolicyPayload { get; set; }
#nullable restore
#else
        public byte[] PolicyPayload { get; set; }
#endif
        /// <summary>Priority value should be unique value for each policy under a tenant and will be used for conflict resolution, lower values mean priority is high.</summary>
        public int? Priority { get; set; }
        /// <summary>User check-in summary for the policy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.OfficeUserCheckinSummary? UserCheckinSummary { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.OfficeUserCheckinSummary UserCheckinSummary { get; set; }
#endif
        /// <summary>Preference settings JSON string in binary format, these values can be overridden by the user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public byte[]? UserPreferencePayload { get; set; }
#nullable restore
#else
        public byte[] UserPreferencePayload { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AITGraph.Sdk.Models.OfficeClientConfiguration"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::AITGraph.Sdk.Models.OfficeClientConfiguration CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.windowsOfficeClientConfiguration" => new global::AITGraph.Sdk.Models.WindowsOfficeClientConfiguration(),
                "#microsoft.graph.windowsOfficeClientSecurityConfiguration" => new global::AITGraph.Sdk.Models.WindowsOfficeClientSecurityConfiguration(),
                _ => new global::AITGraph.Sdk.Models.OfficeClientConfiguration(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "assignments", n => { Assignments = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.OfficeClientConfigurationAssignment>(global::AITGraph.Sdk.Models.OfficeClientConfigurationAssignment.CreateFromDiscriminatorValue)?.AsList(); } },
                { "checkinStatuses", n => { CheckinStatuses = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.OfficeClientCheckinStatus>(global::AITGraph.Sdk.Models.OfficeClientCheckinStatus.CreateFromDiscriminatorValue)?.AsList(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "policyPayload", n => { PolicyPayload = n.GetByteArrayValue(); } },
                { "priority", n => { Priority = n.GetIntValue(); } },
                { "userCheckinSummary", n => { UserCheckinSummary = n.GetObjectValue<global::AITGraph.Sdk.Models.OfficeUserCheckinSummary>(global::AITGraph.Sdk.Models.OfficeUserCheckinSummary.CreateFromDiscriminatorValue); } },
                { "userPreferencePayload", n => { UserPreferencePayload = n.GetByteArrayValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.OfficeClientConfigurationAssignment>("assignments", Assignments);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.OfficeClientCheckinStatus>("checkinStatuses", CheckinStatuses);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteByteArrayValue("policyPayload", PolicyPayload);
            writer.WriteIntValue("priority", Priority);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.OfficeUserCheckinSummary>("userCheckinSummary", UserCheckinSummary);
            writer.WriteByteArrayValue("userPreferencePayload", UserPreferencePayload);
        }
    }
}
#pragma warning restore CS0618
