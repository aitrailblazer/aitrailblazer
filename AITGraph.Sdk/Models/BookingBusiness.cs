// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AITGraph.Sdk.Models
{
    /// <summary>
    /// Represents a Microsot Bookings Business.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class BookingBusiness : global::AITGraph.Sdk.Models.BookingNamedEntity, IParsable
    {
        /// <summary>The street address of the business. The address property, together with phone and webSiteUrl, appear in the footer of a business scheduling page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.PhysicalAddress? Address { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.PhysicalAddress Address { get; set; }
#endif
        /// <summary>All the appointments of this business. Read-only. Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.BookingAppointment>? Appointments { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.BookingAppointment> Appointments { get; set; }
#endif
        /// <summary>The hours of operation for the business.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.BookingWorkHours>? BusinessHours { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.BookingWorkHours> BusinessHours { get; set; }
#endif
        /// <summary>The type of business.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BusinessType { get; set; }
#nullable restore
#else
        public string BusinessType { get; set; }
#endif
        /// <summary>The set of appointments of this business in a specified date range. Read-only. Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.BookingAppointment>? CalendarView { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.BookingAppointment> CalendarView { get; set; }
#endif
        /// <summary>All the customers of this business. Read-only. Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.BookingCustomer>? Customers { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.BookingCustomer> Customers { get; set; }
#endif
        /// <summary>All the custom questions of this business. Read-only. Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.BookingCustomQuestion>? CustomQuestions { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.BookingCustomQuestion> CustomQuestions { get; set; }
#endif
        /// <summary>The code for the currency that the business operates in on Microsoft Bookings.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefaultCurrencyIso { get; set; }
#nullable restore
#else
        public string DefaultCurrencyIso { get; set; }
#endif
        /// <summary>The email address for the business.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>The scheduling page has been made available to external customers. Use the publish and unpublish actions to set this property. Read-only.</summary>
        public bool? IsPublished { get; private set; }
        /// <summary>The language of the self service booking page</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LanguageTag { get; set; }
#nullable restore
#else
        public string LanguageTag { get; set; }
#endif
        /// <summary>The telephone number for the business. The phone property, together with address and webSiteUrl, appear in the footer of a business scheduling page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Phone { get; set; }
#nullable restore
#else
        public string Phone { get; set; }
#endif
        /// <summary>The URL for the scheduling page, which is set after you publish or unpublish the page. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PublicUrl { get; private set; }
#nullable restore
#else
        public string PublicUrl { get; private set; }
#endif
        /// <summary>Specifies how bookings can be created for this business.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.BookingSchedulingPolicy? SchedulingPolicy { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.BookingSchedulingPolicy SchedulingPolicy { get; set; }
#endif
        /// <summary>All the services offered by this business. Read-only. Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.BookingService>? Services { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.BookingService> Services { get; set; }
#endif
        /// <summary>All the staff members that provide services in this business. Read-only. Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.BookingStaffMember>? StaffMembers { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.BookingStaffMember> StaffMembers { get; set; }
#endif
        /// <summary>The URL of the business web site. The webSiteUrl property, together with address, phone, appear in the footer of a business scheduling page.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebSiteUrl { get; set; }
#nullable restore
#else
        public string WebSiteUrl { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::AITGraph.Sdk.Models.BookingBusiness"/> and sets the default values.
        /// </summary>
        public BookingBusiness() : base()
        {
            OdataType = "#microsoft.graph.bookingBusiness";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AITGraph.Sdk.Models.BookingBusiness"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::AITGraph.Sdk.Models.BookingBusiness CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::AITGraph.Sdk.Models.BookingBusiness();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "address", n => { Address = n.GetObjectValue<global::AITGraph.Sdk.Models.PhysicalAddress>(global::AITGraph.Sdk.Models.PhysicalAddress.CreateFromDiscriminatorValue); } },
                { "appointments", n => { Appointments = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.BookingAppointment>(global::AITGraph.Sdk.Models.BookingAppointment.CreateFromDiscriminatorValue)?.AsList(); } },
                { "businessHours", n => { BusinessHours = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.BookingWorkHours>(global::AITGraph.Sdk.Models.BookingWorkHours.CreateFromDiscriminatorValue)?.AsList(); } },
                { "businessType", n => { BusinessType = n.GetStringValue(); } },
                { "calendarView", n => { CalendarView = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.BookingAppointment>(global::AITGraph.Sdk.Models.BookingAppointment.CreateFromDiscriminatorValue)?.AsList(); } },
                { "customQuestions", n => { CustomQuestions = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.BookingCustomQuestion>(global::AITGraph.Sdk.Models.BookingCustomQuestion.CreateFromDiscriminatorValue)?.AsList(); } },
                { "customers", n => { Customers = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.BookingCustomer>(global::AITGraph.Sdk.Models.BookingCustomer.CreateFromDiscriminatorValue)?.AsList(); } },
                { "defaultCurrencyIso", n => { DefaultCurrencyIso = n.GetStringValue(); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "isPublished", n => { IsPublished = n.GetBoolValue(); } },
                { "languageTag", n => { LanguageTag = n.GetStringValue(); } },
                { "phone", n => { Phone = n.GetStringValue(); } },
                { "publicUrl", n => { PublicUrl = n.GetStringValue(); } },
                { "schedulingPolicy", n => { SchedulingPolicy = n.GetObjectValue<global::AITGraph.Sdk.Models.BookingSchedulingPolicy>(global::AITGraph.Sdk.Models.BookingSchedulingPolicy.CreateFromDiscriminatorValue); } },
                { "services", n => { Services = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.BookingService>(global::AITGraph.Sdk.Models.BookingService.CreateFromDiscriminatorValue)?.AsList(); } },
                { "staffMembers", n => { StaffMembers = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.BookingStaffMember>(global::AITGraph.Sdk.Models.BookingStaffMember.CreateFromDiscriminatorValue)?.AsList(); } },
                { "webSiteUrl", n => { WebSiteUrl = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.PhysicalAddress>("address", Address);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.BookingAppointment>("appointments", Appointments);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.BookingWorkHours>("businessHours", BusinessHours);
            writer.WriteStringValue("businessType", BusinessType);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.BookingAppointment>("calendarView", CalendarView);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.BookingCustomer>("customers", Customers);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.BookingCustomQuestion>("customQuestions", CustomQuestions);
            writer.WriteStringValue("defaultCurrencyIso", DefaultCurrencyIso);
            writer.WriteStringValue("email", Email);
            writer.WriteStringValue("languageTag", LanguageTag);
            writer.WriteStringValue("phone", Phone);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.BookingSchedulingPolicy>("schedulingPolicy", SchedulingPolicy);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.BookingService>("services", Services);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.BookingStaffMember>("staffMembers", StaffMembers);
            writer.WriteStringValue("webSiteUrl", WebSiteUrl);
        }
    }
}
#pragma warning restore CS0618
