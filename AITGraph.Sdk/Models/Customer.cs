// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AITGraph.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Customer : global::AITGraph.Sdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The address property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.PostalAddressType? Address { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.PostalAddressType Address { get; set; }
#endif
        /// <summary>The blocked property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Blocked { get; set; }
#nullable restore
#else
        public string Blocked { get; set; }
#endif
        /// <summary>The currency property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.Currency? Currency { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.Currency Currency { get; set; }
#endif
        /// <summary>The currencyCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CurrencyCode { get; set; }
#nullable restore
#else
        public string CurrencyCode { get; set; }
#endif
        /// <summary>The currencyId property</summary>
        public Guid? CurrencyId { get; set; }
        /// <summary>The displayName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>The email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>The lastModifiedDateTime property</summary>
        public DateTimeOffset? LastModifiedDateTime { get; set; }
        /// <summary>The number property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Number { get; set; }
#nullable restore
#else
        public string Number { get; set; }
#endif
        /// <summary>The paymentMethod property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.PaymentMethod? PaymentMethod { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.PaymentMethod PaymentMethod { get; set; }
#endif
        /// <summary>The paymentMethodId property</summary>
        public Guid? PaymentMethodId { get; set; }
        /// <summary>The paymentTerm property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.PaymentTerm? PaymentTerm { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.PaymentTerm PaymentTerm { get; set; }
#endif
        /// <summary>The paymentTermsId property</summary>
        public Guid? PaymentTermsId { get; set; }
        /// <summary>The phoneNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PhoneNumber { get; set; }
#nullable restore
#else
        public string PhoneNumber { get; set; }
#endif
        /// <summary>The picture property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.Picture>? Picture { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.Picture> Picture { get; set; }
#endif
        /// <summary>The shipmentMethod property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.ShipmentMethod? ShipmentMethod { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.ShipmentMethod ShipmentMethod { get; set; }
#endif
        /// <summary>The shipmentMethodId property</summary>
        public Guid? ShipmentMethodId { get; set; }
        /// <summary>The taxAreaDisplayName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TaxAreaDisplayName { get; set; }
#nullable restore
#else
        public string TaxAreaDisplayName { get; set; }
#endif
        /// <summary>The taxAreaId property</summary>
        public Guid? TaxAreaId { get; set; }
        /// <summary>The taxLiable property</summary>
        public bool? TaxLiable { get; set; }
        /// <summary>The taxRegistrationNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TaxRegistrationNumber { get; set; }
#nullable restore
#else
        public string TaxRegistrationNumber { get; set; }
#endif
        /// <summary>The type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>The website property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Website { get; set; }
#nullable restore
#else
        public string Website { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AITGraph.Sdk.Models.Customer"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::AITGraph.Sdk.Models.Customer CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::AITGraph.Sdk.Models.Customer();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "address", n => { Address = n.GetObjectValue<global::AITGraph.Sdk.Models.PostalAddressType>(global::AITGraph.Sdk.Models.PostalAddressType.CreateFromDiscriminatorValue); } },
                { "blocked", n => { Blocked = n.GetStringValue(); } },
                { "currency", n => { Currency = n.GetObjectValue<global::AITGraph.Sdk.Models.Currency>(global::AITGraph.Sdk.Models.Currency.CreateFromDiscriminatorValue); } },
                { "currencyCode", n => { CurrencyCode = n.GetStringValue(); } },
                { "currencyId", n => { CurrencyId = n.GetGuidValue(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "number", n => { Number = n.GetStringValue(); } },
                { "paymentMethod", n => { PaymentMethod = n.GetObjectValue<global::AITGraph.Sdk.Models.PaymentMethod>(global::AITGraph.Sdk.Models.PaymentMethod.CreateFromDiscriminatorValue); } },
                { "paymentMethodId", n => { PaymentMethodId = n.GetGuidValue(); } },
                { "paymentTerm", n => { PaymentTerm = n.GetObjectValue<global::AITGraph.Sdk.Models.PaymentTerm>(global::AITGraph.Sdk.Models.PaymentTerm.CreateFromDiscriminatorValue); } },
                { "paymentTermsId", n => { PaymentTermsId = n.GetGuidValue(); } },
                { "phoneNumber", n => { PhoneNumber = n.GetStringValue(); } },
                { "picture", n => { Picture = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.Picture>(global::AITGraph.Sdk.Models.Picture.CreateFromDiscriminatorValue)?.AsList(); } },
                { "shipmentMethod", n => { ShipmentMethod = n.GetObjectValue<global::AITGraph.Sdk.Models.ShipmentMethod>(global::AITGraph.Sdk.Models.ShipmentMethod.CreateFromDiscriminatorValue); } },
                { "shipmentMethodId", n => { ShipmentMethodId = n.GetGuidValue(); } },
                { "taxAreaDisplayName", n => { TaxAreaDisplayName = n.GetStringValue(); } },
                { "taxAreaId", n => { TaxAreaId = n.GetGuidValue(); } },
                { "taxLiable", n => { TaxLiable = n.GetBoolValue(); } },
                { "taxRegistrationNumber", n => { TaxRegistrationNumber = n.GetStringValue(); } },
                { "type", n => { Type = n.GetStringValue(); } },
                { "website", n => { Website = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.PostalAddressType>("address", Address);
            writer.WriteStringValue("blocked", Blocked);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.Currency>("currency", Currency);
            writer.WriteStringValue("currencyCode", CurrencyCode);
            writer.WriteGuidValue("currencyId", CurrencyId);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteStringValue("email", Email);
            writer.WriteDateTimeOffsetValue("lastModifiedDateTime", LastModifiedDateTime);
            writer.WriteStringValue("number", Number);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.PaymentMethod>("paymentMethod", PaymentMethod);
            writer.WriteGuidValue("paymentMethodId", PaymentMethodId);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.PaymentTerm>("paymentTerm", PaymentTerm);
            writer.WriteGuidValue("paymentTermsId", PaymentTermsId);
            writer.WriteStringValue("phoneNumber", PhoneNumber);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.Picture>("picture", Picture);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.ShipmentMethod>("shipmentMethod", ShipmentMethod);
            writer.WriteGuidValue("shipmentMethodId", ShipmentMethodId);
            writer.WriteStringValue("taxAreaDisplayName", TaxAreaDisplayName);
            writer.WriteGuidValue("taxAreaId", TaxAreaId);
            writer.WriteBoolValue("taxLiable", TaxLiable);
            writer.WriteStringValue("taxRegistrationNumber", TaxRegistrationNumber);
            writer.WriteStringValue("type", Type);
            writer.WriteStringValue("website", Website);
        }
    }
}
#pragma warning restore CS0618
