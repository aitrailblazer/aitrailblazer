// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AITGraph.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class UserActivity : global::AITGraph.Sdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The activationUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ActivationUrl { get; set; }
#nullable restore
#else
        public string ActivationUrl { get; set; }
#endif
        /// <summary>The activitySourceHost property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ActivitySourceHost { get; set; }
#nullable restore
#else
        public string ActivitySourceHost { get; set; }
#endif
        /// <summary>The appActivityId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AppActivityId { get; set; }
#nullable restore
#else
        public string AppActivityId { get; set; }
#endif
        /// <summary>The appDisplayName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AppDisplayName { get; set; }
#nullable restore
#else
        public string AppDisplayName { get; set; }
#endif
        /// <summary>The contentInfo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.Json? ContentInfo { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.Json ContentInfo { get; set; }
#endif
        /// <summary>The contentUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContentUrl { get; set; }
#nullable restore
#else
        public string ContentUrl { get; set; }
#endif
        /// <summary>The createdDateTime property</summary>
        public DateTimeOffset? CreatedDateTime { get; set; }
        /// <summary>The expirationDateTime property</summary>
        public DateTimeOffset? ExpirationDateTime { get; set; }
        /// <summary>The fallbackUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FallbackUrl { get; set; }
#nullable restore
#else
        public string FallbackUrl { get; set; }
#endif
        /// <summary>The historyItems property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ActivityHistoryItem>? HistoryItems { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ActivityHistoryItem> HistoryItems { get; set; }
#endif
        /// <summary>The lastModifiedDateTime property</summary>
        public DateTimeOffset? LastModifiedDateTime { get; set; }
        /// <summary>The status property</summary>
        public global::AITGraph.Sdk.Models.Status? Status { get; set; }
        /// <summary>The userTimezone property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserTimezone { get; set; }
#nullable restore
#else
        public string UserTimezone { get; set; }
#endif
        /// <summary>The visualElements property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.VisualInfo? VisualElements { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.VisualInfo VisualElements { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AITGraph.Sdk.Models.UserActivity"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::AITGraph.Sdk.Models.UserActivity CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::AITGraph.Sdk.Models.UserActivity();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "activationUrl", n => { ActivationUrl = n.GetStringValue(); } },
                { "activitySourceHost", n => { ActivitySourceHost = n.GetStringValue(); } },
                { "appActivityId", n => { AppActivityId = n.GetStringValue(); } },
                { "appDisplayName", n => { AppDisplayName = n.GetStringValue(); } },
                { "contentInfo", n => { ContentInfo = n.GetObjectValue<global::AITGraph.Sdk.Models.Json>(global::AITGraph.Sdk.Models.Json.CreateFromDiscriminatorValue); } },
                { "contentUrl", n => { ContentUrl = n.GetStringValue(); } },
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "expirationDateTime", n => { ExpirationDateTime = n.GetDateTimeOffsetValue(); } },
                { "fallbackUrl", n => { FallbackUrl = n.GetStringValue(); } },
                { "historyItems", n => { HistoryItems = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ActivityHistoryItem>(global::AITGraph.Sdk.Models.ActivityHistoryItem.CreateFromDiscriminatorValue)?.AsList(); } },
                { "lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::AITGraph.Sdk.Models.Status>(); } },
                { "userTimezone", n => { UserTimezone = n.GetStringValue(); } },
                { "visualElements", n => { VisualElements = n.GetObjectValue<global::AITGraph.Sdk.Models.VisualInfo>(global::AITGraph.Sdk.Models.VisualInfo.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("activationUrl", ActivationUrl);
            writer.WriteStringValue("activitySourceHost", ActivitySourceHost);
            writer.WriteStringValue("appActivityId", AppActivityId);
            writer.WriteStringValue("appDisplayName", AppDisplayName);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.Json>("contentInfo", ContentInfo);
            writer.WriteStringValue("contentUrl", ContentUrl);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteDateTimeOffsetValue("expirationDateTime", ExpirationDateTime);
            writer.WriteStringValue("fallbackUrl", FallbackUrl);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ActivityHistoryItem>("historyItems", HistoryItems);
            writer.WriteDateTimeOffsetValue("lastModifiedDateTime", LastModifiedDateTime);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Status>("status", Status);
            writer.WriteStringValue("userTimezone", UserTimezone);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.VisualInfo>("visualElements", VisualElements);
        }
    }
}
#pragma warning restore CS0618
