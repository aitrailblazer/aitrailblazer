// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CognitiveServices.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    #pragma warning disable CS1591
    public partial class CreativeWork : global::CognitiveServices.Sdk.Models.Thing, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The source of the creative work.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CognitiveServices.Sdk.Models.Thing>? Provider { get; private set; }
#nullable restore
#else
        public List<global::CognitiveServices.Sdk.Models.Thing> Provider { get; private set; }
#endif
        /// <summary>The text property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Text { get; private set; }
#nullable restore
#else
        public string Text { get; private set; }
#endif
        /// <summary>The URL to a thumbnail of the item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ThumbnailUrl { get; private set; }
#nullable restore
#else
        public string ThumbnailUrl { get; private set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CognitiveServices.Sdk.Models.CreativeWork"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::CognitiveServices.Sdk.Models.CreativeWork CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("_type")?.GetStringValue();
            return mappingValue switch
            {
                "ImageObject" => new global::CognitiveServices.Sdk.Models.ImageObject(),
                "License" => new global::CognitiveServices.Sdk.Models.License(),
                "MediaObject" => new global::CognitiveServices.Sdk.Models.MediaObject(),
                _ => new global::CognitiveServices.Sdk.Models.CreativeWork(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "provider", n => { Provider = n.GetCollectionOfObjectValues<global::CognitiveServices.Sdk.Models.Thing>(global::CognitiveServices.Sdk.Models.Thing.CreateFromDiscriminatorValue)?.AsList(); } },
                { "text", n => { Text = n.GetStringValue(); } },
                { "thumbnailUrl", n => { ThumbnailUrl = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
        }
    }
}
#pragma warning restore CS0618
