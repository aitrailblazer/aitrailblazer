// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AITGraph.Sdk.Models.ManagedTenants
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ManagedTenant : global::AITGraph.Sdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Aggregate view of device compliance policies across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.AggregatedPolicyCompliance>? AggregatedPolicyCompliances { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.AggregatedPolicyCompliance> AggregatedPolicyCompliances { get; set; }
#endif
        /// <summary>The collection of audit events across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.AuditEvent>? AuditEvents { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.AuditEvent> AuditEvents { get; set; }
#endif
        /// <summary>The collection of cloud PC connections across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.CloudPcConnection>? CloudPcConnections { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.CloudPcConnection> CloudPcConnections { get; set; }
#endif
        /// <summary>The collection of cloud PC devices across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.CloudPcDevice>? CloudPcDevices { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.CloudPcDevice> CloudPcDevices { get; set; }
#endif
        /// <summary>Overview of cloud PC information across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.CloudPcOverview>? CloudPcsOverview { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.CloudPcOverview> CloudPcsOverview { get; set; }
#endif
        /// <summary>Aggregate view of conditional access policy coverage across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ConditionalAccessPolicyCoverage>? ConditionalAccessPolicyCoverages { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ConditionalAccessPolicyCoverage> ConditionalAccessPolicyCoverages { get; set; }
#endif
        /// <summary>Summary information for user registration for multi-factor authentication and self service password reset across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.CredentialUserRegistrationsSummary>? CredentialUserRegistrationsSummaries { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.CredentialUserRegistrationsSummary> CredentialUserRegistrationsSummaries { get; set; }
#endif
        /// <summary>Summary information for device compliance policy setting states across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.DeviceCompliancePolicySettingStateSummary>? DeviceCompliancePolicySettingStateSummaries { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.DeviceCompliancePolicySettingStateSummary> DeviceCompliancePolicySettingStateSummaries { get; set; }
#endif
        /// <summary>The collection of compliance for managed devices across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagedDeviceCompliance>? ManagedDeviceCompliances { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagedDeviceCompliance> ManagedDeviceCompliances { get; set; }
#endif
        /// <summary>Trend insights for device compliance across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagedDeviceComplianceTrend>? ManagedDeviceComplianceTrends { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagedDeviceComplianceTrend> ManagedDeviceComplianceTrends { get; set; }
#endif
        /// <summary>The managedTenantAlertLogs property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlertLog>? ManagedTenantAlertLogs { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlertLog> ManagedTenantAlertLogs { get; set; }
#endif
        /// <summary>The managedTenantAlertRuleDefinitions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlertRuleDefinition>? ManagedTenantAlertRuleDefinitions { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlertRuleDefinition> ManagedTenantAlertRuleDefinitions { get; set; }
#endif
        /// <summary>The managedTenantAlertRules property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlertRule>? ManagedTenantAlertRules { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlertRule> ManagedTenantAlertRules { get; set; }
#endif
        /// <summary>The managedTenantAlerts property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlert>? ManagedTenantAlerts { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlert> ManagedTenantAlerts { get; set; }
#endif
        /// <summary>The managedTenantApiNotifications property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantApiNotification>? ManagedTenantApiNotifications { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantApiNotification> ManagedTenantApiNotifications { get; set; }
#endif
        /// <summary>The managedTenantEmailNotifications property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantEmailNotification>? ManagedTenantEmailNotifications { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantEmailNotification> ManagedTenantEmailNotifications { get; set; }
#endif
        /// <summary>The managedTenantTicketingEndpoints property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantTicketingEndpoint>? ManagedTenantTicketingEndpoints { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantTicketingEndpoint> ManagedTenantTicketingEndpoints { get; set; }
#endif
        /// <summary>The collection of baseline management actions across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagementAction>? ManagementActions { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagementAction> ManagementActions { get; set; }
#endif
        /// <summary>The tenant level status of management actions across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagementActionTenantDeploymentStatus>? ManagementActionTenantDeploymentStatuses { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagementActionTenantDeploymentStatus> ManagementActionTenantDeploymentStatuses { get; set; }
#endif
        /// <summary>The collection of baseline management intents across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagementIntent>? ManagementIntents { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagementIntent> ManagementIntents { get; set; }
#endif
        /// <summary>The managementTemplateCollections property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateCollection>? ManagementTemplateCollections { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateCollection> ManagementTemplateCollections { get; set; }
#endif
        /// <summary>The managementTemplateCollectionTenantSummaries property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateCollectionTenantSummary>? ManagementTemplateCollectionTenantSummaries { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateCollectionTenantSummary> ManagementTemplateCollectionTenantSummaries { get; set; }
#endif
        /// <summary>The collection of baseline management templates across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplate>? ManagementTemplates { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplate> ManagementTemplates { get; set; }
#endif
        /// <summary>The managementTemplateSteps property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateStep>? ManagementTemplateSteps { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateStep> ManagementTemplateSteps { get; set; }
#endif
        /// <summary>The managementTemplateStepTenantSummaries property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateStepTenantSummary>? ManagementTemplateStepTenantSummaries { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateStepTenantSummary> ManagementTemplateStepTenantSummaries { get; set; }
#endif
        /// <summary>The managementTemplateStepVersions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateStepVersion>? ManagementTemplateStepVersions { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateStepVersion> ManagementTemplateStepVersions { get; set; }
#endif
        /// <summary>The collection of role assignments to a signed-in user for a managed tenant.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.MyRole>? MyRoles { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.MyRole> MyRoles { get; set; }
#endif
        /// <summary>The collection of a logical grouping of managed tenants used by the multi-tenant management platform.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.TenantGroup>? TenantGroups { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.TenantGroup> TenantGroups { get; set; }
#endif
        /// <summary>The collection of tenants associated with the managing entity.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.Tenant>? Tenants { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.Tenant> Tenants { get; set; }
#endif
        /// <summary>The collection of tenant level customized information across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.TenantCustomizedInformation>? TenantsCustomizedInformation { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.TenantCustomizedInformation> TenantsCustomizedInformation { get; set; }
#endif
        /// <summary>The collection tenant level detailed information across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.TenantDetailedInformation>? TenantsDetailedInformation { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.TenantDetailedInformation> TenantsDetailedInformation { get; set; }
#endif
        /// <summary>The collection of tenant tags across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.TenantTag>? TenantTags { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.TenantTag> TenantTags { get; set; }
#endif
        /// <summary>The state of malware for Windows devices, registered with Microsoft Endpoint Manager, across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.WindowsDeviceMalwareState>? WindowsDeviceMalwareStates { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.WindowsDeviceMalwareState> WindowsDeviceMalwareStates { get; set; }
#endif
        /// <summary>The protection state for Windows devices, registered with Microsoft Endpoint Manager, across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ManagedTenants.WindowsProtectionState>? WindowsProtectionStates { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ManagedTenants.WindowsProtectionState> WindowsProtectionStates { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenant"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenant CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenant();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "aggregatedPolicyCompliances", n => { AggregatedPolicyCompliances = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.AggregatedPolicyCompliance>(global::AITGraph.Sdk.Models.ManagedTenants.AggregatedPolicyCompliance.CreateFromDiscriminatorValue)?.AsList(); } },
                { "auditEvents", n => { AuditEvents = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.AuditEvent>(global::AITGraph.Sdk.Models.ManagedTenants.AuditEvent.CreateFromDiscriminatorValue)?.AsList(); } },
                { "cloudPcConnections", n => { CloudPcConnections = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.CloudPcConnection>(global::AITGraph.Sdk.Models.ManagedTenants.CloudPcConnection.CreateFromDiscriminatorValue)?.AsList(); } },
                { "cloudPcDevices", n => { CloudPcDevices = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.CloudPcDevice>(global::AITGraph.Sdk.Models.ManagedTenants.CloudPcDevice.CreateFromDiscriminatorValue)?.AsList(); } },
                { "cloudPcsOverview", n => { CloudPcsOverview = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.CloudPcOverview>(global::AITGraph.Sdk.Models.ManagedTenants.CloudPcOverview.CreateFromDiscriminatorValue)?.AsList(); } },
                { "conditionalAccessPolicyCoverages", n => { ConditionalAccessPolicyCoverages = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ConditionalAccessPolicyCoverage>(global::AITGraph.Sdk.Models.ManagedTenants.ConditionalAccessPolicyCoverage.CreateFromDiscriminatorValue)?.AsList(); } },
                { "credentialUserRegistrationsSummaries", n => { CredentialUserRegistrationsSummaries = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.CredentialUserRegistrationsSummary>(global::AITGraph.Sdk.Models.ManagedTenants.CredentialUserRegistrationsSummary.CreateFromDiscriminatorValue)?.AsList(); } },
                { "deviceCompliancePolicySettingStateSummaries", n => { DeviceCompliancePolicySettingStateSummaries = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.DeviceCompliancePolicySettingStateSummary>(global::AITGraph.Sdk.Models.ManagedTenants.DeviceCompliancePolicySettingStateSummary.CreateFromDiscriminatorValue)?.AsList(); } },
                { "managedDeviceComplianceTrends", n => { ManagedDeviceComplianceTrends = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagedDeviceComplianceTrend>(global::AITGraph.Sdk.Models.ManagedTenants.ManagedDeviceComplianceTrend.CreateFromDiscriminatorValue)?.AsList(); } },
                { "managedDeviceCompliances", n => { ManagedDeviceCompliances = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagedDeviceCompliance>(global::AITGraph.Sdk.Models.ManagedTenants.ManagedDeviceCompliance.CreateFromDiscriminatorValue)?.AsList(); } },
                { "managedTenantAlertLogs", n => { ManagedTenantAlertLogs = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlertLog>(global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlertLog.CreateFromDiscriminatorValue)?.AsList(); } },
                { "managedTenantAlertRuleDefinitions", n => { ManagedTenantAlertRuleDefinitions = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlertRuleDefinition>(global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlertRuleDefinition.CreateFromDiscriminatorValue)?.AsList(); } },
                { "managedTenantAlertRules", n => { ManagedTenantAlertRules = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlertRule>(global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlertRule.CreateFromDiscriminatorValue)?.AsList(); } },
                { "managedTenantAlerts", n => { ManagedTenantAlerts = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlert>(global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlert.CreateFromDiscriminatorValue)?.AsList(); } },
                { "managedTenantApiNotifications", n => { ManagedTenantApiNotifications = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantApiNotification>(global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantApiNotification.CreateFromDiscriminatorValue)?.AsList(); } },
                { "managedTenantEmailNotifications", n => { ManagedTenantEmailNotifications = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantEmailNotification>(global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantEmailNotification.CreateFromDiscriminatorValue)?.AsList(); } },
                { "managedTenantTicketingEndpoints", n => { ManagedTenantTicketingEndpoints = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantTicketingEndpoint>(global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantTicketingEndpoint.CreateFromDiscriminatorValue)?.AsList(); } },
                { "managementActionTenantDeploymentStatuses", n => { ManagementActionTenantDeploymentStatuses = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagementActionTenantDeploymentStatus>(global::AITGraph.Sdk.Models.ManagedTenants.ManagementActionTenantDeploymentStatus.CreateFromDiscriminatorValue)?.AsList(); } },
                { "managementActions", n => { ManagementActions = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagementAction>(global::AITGraph.Sdk.Models.ManagedTenants.ManagementAction.CreateFromDiscriminatorValue)?.AsList(); } },
                { "managementIntents", n => { ManagementIntents = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagementIntent>(global::AITGraph.Sdk.Models.ManagedTenants.ManagementIntent.CreateFromDiscriminatorValue)?.AsList(); } },
                { "managementTemplateCollectionTenantSummaries", n => { ManagementTemplateCollectionTenantSummaries = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateCollectionTenantSummary>(global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateCollectionTenantSummary.CreateFromDiscriminatorValue)?.AsList(); } },
                { "managementTemplateCollections", n => { ManagementTemplateCollections = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateCollection>(global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateCollection.CreateFromDiscriminatorValue)?.AsList(); } },
                { "managementTemplateStepTenantSummaries", n => { ManagementTemplateStepTenantSummaries = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateStepTenantSummary>(global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateStepTenantSummary.CreateFromDiscriminatorValue)?.AsList(); } },
                { "managementTemplateStepVersions", n => { ManagementTemplateStepVersions = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateStepVersion>(global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateStepVersion.CreateFromDiscriminatorValue)?.AsList(); } },
                { "managementTemplateSteps", n => { ManagementTemplateSteps = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateStep>(global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateStep.CreateFromDiscriminatorValue)?.AsList(); } },
                { "managementTemplates", n => { ManagementTemplates = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplate>(global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplate.CreateFromDiscriminatorValue)?.AsList(); } },
                { "myRoles", n => { MyRoles = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.MyRole>(global::AITGraph.Sdk.Models.ManagedTenants.MyRole.CreateFromDiscriminatorValue)?.AsList(); } },
                { "tenantGroups", n => { TenantGroups = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.TenantGroup>(global::AITGraph.Sdk.Models.ManagedTenants.TenantGroup.CreateFromDiscriminatorValue)?.AsList(); } },
                { "tenantTags", n => { TenantTags = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.TenantTag>(global::AITGraph.Sdk.Models.ManagedTenants.TenantTag.CreateFromDiscriminatorValue)?.AsList(); } },
                { "tenants", n => { Tenants = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.Tenant>(global::AITGraph.Sdk.Models.ManagedTenants.Tenant.CreateFromDiscriminatorValue)?.AsList(); } },
                { "tenantsCustomizedInformation", n => { TenantsCustomizedInformation = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.TenantCustomizedInformation>(global::AITGraph.Sdk.Models.ManagedTenants.TenantCustomizedInformation.CreateFromDiscriminatorValue)?.AsList(); } },
                { "tenantsDetailedInformation", n => { TenantsDetailedInformation = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.TenantDetailedInformation>(global::AITGraph.Sdk.Models.ManagedTenants.TenantDetailedInformation.CreateFromDiscriminatorValue)?.AsList(); } },
                { "windowsDeviceMalwareStates", n => { WindowsDeviceMalwareStates = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.WindowsDeviceMalwareState>(global::AITGraph.Sdk.Models.ManagedTenants.WindowsDeviceMalwareState.CreateFromDiscriminatorValue)?.AsList(); } },
                { "windowsProtectionStates", n => { WindowsProtectionStates = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.WindowsProtectionState>(global::AITGraph.Sdk.Models.ManagedTenants.WindowsProtectionState.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.AggregatedPolicyCompliance>("aggregatedPolicyCompliances", AggregatedPolicyCompliances);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.AuditEvent>("auditEvents", AuditEvents);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.CloudPcConnection>("cloudPcConnections", CloudPcConnections);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.CloudPcDevice>("cloudPcDevices", CloudPcDevices);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.CloudPcOverview>("cloudPcsOverview", CloudPcsOverview);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ConditionalAccessPolicyCoverage>("conditionalAccessPolicyCoverages", ConditionalAccessPolicyCoverages);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.CredentialUserRegistrationsSummary>("credentialUserRegistrationsSummaries", CredentialUserRegistrationsSummaries);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.DeviceCompliancePolicySettingStateSummary>("deviceCompliancePolicySettingStateSummaries", DeviceCompliancePolicySettingStateSummaries);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagedDeviceCompliance>("managedDeviceCompliances", ManagedDeviceCompliances);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagedDeviceComplianceTrend>("managedDeviceComplianceTrends", ManagedDeviceComplianceTrends);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlertLog>("managedTenantAlertLogs", ManagedTenantAlertLogs);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlertRuleDefinition>("managedTenantAlertRuleDefinitions", ManagedTenantAlertRuleDefinitions);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlertRule>("managedTenantAlertRules", ManagedTenantAlertRules);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantAlert>("managedTenantAlerts", ManagedTenantAlerts);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantApiNotification>("managedTenantApiNotifications", ManagedTenantApiNotifications);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantEmailNotification>("managedTenantEmailNotifications", ManagedTenantEmailNotifications);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagedTenantTicketingEndpoint>("managedTenantTicketingEndpoints", ManagedTenantTicketingEndpoints);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagementAction>("managementActions", ManagementActions);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagementActionTenantDeploymentStatus>("managementActionTenantDeploymentStatuses", ManagementActionTenantDeploymentStatuses);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagementIntent>("managementIntents", ManagementIntents);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateCollection>("managementTemplateCollections", ManagementTemplateCollections);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateCollectionTenantSummary>("managementTemplateCollectionTenantSummaries", ManagementTemplateCollectionTenantSummaries);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplate>("managementTemplates", ManagementTemplates);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateStep>("managementTemplateSteps", ManagementTemplateSteps);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateStepTenantSummary>("managementTemplateStepTenantSummaries", ManagementTemplateStepTenantSummaries);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.ManagementTemplateStepVersion>("managementTemplateStepVersions", ManagementTemplateStepVersions);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.MyRole>("myRoles", MyRoles);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.TenantGroup>("tenantGroups", TenantGroups);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.Tenant>("tenants", Tenants);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.TenantCustomizedInformation>("tenantsCustomizedInformation", TenantsCustomizedInformation);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.TenantDetailedInformation>("tenantsDetailedInformation", TenantsDetailedInformation);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.TenantTag>("tenantTags", TenantTags);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.WindowsDeviceMalwareState>("windowsDeviceMalwareStates", WindowsDeviceMalwareStates);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ManagedTenants.WindowsProtectionState>("windowsProtectionStates", WindowsProtectionStates);
        }
    }
}
#pragma warning restore CS0618
