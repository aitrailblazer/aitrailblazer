// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AITGraph.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PrivilegedAccessScheduleRequest : global::AITGraph.Sdk.Models.Request, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The action property</summary>
        public global::AITGraph.Sdk.Models.ScheduleRequestActions? Action { get; set; }
        /// <summary>The isValidationOnly property</summary>
        public bool? IsValidationOnly { get; set; }
        /// <summary>The justification property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Justification { get; set; }
#nullable restore
#else
        public string Justification { get; set; }
#endif
        /// <summary>The scheduleInfo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.RequestSchedule? ScheduleInfo { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.RequestSchedule ScheduleInfo { get; set; }
#endif
        /// <summary>The ticketInfo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.TicketInfo? TicketInfo { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.TicketInfo TicketInfo { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::AITGraph.Sdk.Models.PrivilegedAccessScheduleRequest"/> and sets the default values.
        /// </summary>
        public PrivilegedAccessScheduleRequest() : base()
        {
            OdataType = "#microsoft.graph.privilegedAccessScheduleRequest";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AITGraph.Sdk.Models.PrivilegedAccessScheduleRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::AITGraph.Sdk.Models.PrivilegedAccessScheduleRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.privilegedAccessGroupAssignmentScheduleRequest" => new global::AITGraph.Sdk.Models.PrivilegedAccessGroupAssignmentScheduleRequest(),
                "#microsoft.graph.privilegedAccessGroupEligibilityScheduleRequest" => new global::AITGraph.Sdk.Models.PrivilegedAccessGroupEligibilityScheduleRequest(),
                _ => new global::AITGraph.Sdk.Models.PrivilegedAccessScheduleRequest(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "action", n => { Action = n.GetEnumValue<global::AITGraph.Sdk.Models.ScheduleRequestActions>(); } },
                { "isValidationOnly", n => { IsValidationOnly = n.GetBoolValue(); } },
                { "justification", n => { Justification = n.GetStringValue(); } },
                { "scheduleInfo", n => { ScheduleInfo = n.GetObjectValue<global::AITGraph.Sdk.Models.RequestSchedule>(global::AITGraph.Sdk.Models.RequestSchedule.CreateFromDiscriminatorValue); } },
                { "ticketInfo", n => { TicketInfo = n.GetObjectValue<global::AITGraph.Sdk.Models.TicketInfo>(global::AITGraph.Sdk.Models.TicketInfo.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.ScheduleRequestActions>("action", Action);
            writer.WriteBoolValue("isValidationOnly", IsValidationOnly);
            writer.WriteStringValue("justification", Justification);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.RequestSchedule>("scheduleInfo", ScheduleInfo);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.TicketInfo>("ticketInfo", TicketInfo);
        }
    }
}
#pragma warning restore CS0618
