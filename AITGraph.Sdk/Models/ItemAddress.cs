// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AITGraph.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ItemAddress : global::AITGraph.Sdk.Models.ItemFacet, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The detail property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.PhysicalAddress? Detail { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.PhysicalAddress Detail { get; set; }
#endif
        /// <summary>Friendly name the user has assigned to this address.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>The geocoordinates of the address.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.GeoCoordinates? GeoCoordinates { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.GeoCoordinates GeoCoordinates { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::AITGraph.Sdk.Models.ItemAddress"/> and sets the default values.
        /// </summary>
        public ItemAddress() : base()
        {
            OdataType = "#microsoft.graph.itemAddress";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AITGraph.Sdk.Models.ItemAddress"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::AITGraph.Sdk.Models.ItemAddress CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::AITGraph.Sdk.Models.ItemAddress();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "detail", n => { Detail = n.GetObjectValue<global::AITGraph.Sdk.Models.PhysicalAddress>(global::AITGraph.Sdk.Models.PhysicalAddress.CreateFromDiscriminatorValue); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "geoCoordinates", n => { GeoCoordinates = n.GetObjectValue<global::AITGraph.Sdk.Models.GeoCoordinates>(global::AITGraph.Sdk.Models.GeoCoordinates.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.PhysicalAddress>("detail", Detail);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.GeoCoordinates>("geoCoordinates", GeoCoordinates);
        }
    }
}
#pragma warning restore CS0618
