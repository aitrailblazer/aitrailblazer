using MongoDB.Bson;
using MongoDB.Bson.Serialization.Attributes;
using Newtonsoft.Json;

namespace aitrailblazer.net.Services;

public record Session
{
    [BsonId]
    [BsonRepresentation(BsonType.String)]
    public string Id { get; set; }
    public DateTime TimeStamp { get; set; }

    public string Type { get; set; }

    public string SessionId { get; set; }

    public int? TokensUsed { get; set; }

    public string Name { get; set; }

    public string FeatureNameProject { get; set; }

    public string CurrentUserIdentityID { get; set; }

    

    [BsonIgnore]
    public List<SessionMessage> Messages { get; set; }

    public Session(string featureNameProject, string currentUserIdentityID)
    {
        Id = Guid.NewGuid().ToString();
        TimeStamp = DateTime.UtcNow;
        Type = nameof(Session);
        SessionId = GenerateSessionId(featureNameProject, currentUserIdentityID);
        TokensUsed = 0;
        Name = featureNameProject;
        FeatureNameProject = featureNameProject;
        CurrentUserIdentityID = currentUserIdentityID;
        Messages = new List<SessionMessage>();
    }

    private string GenerateSessionId(string featureName, string currentUserIdentityID)
    {
        return $"{currentUserIdentityID}-{featureName}-{Guid.NewGuid()}";
    }
    public void AddMessage(SessionMessage message)
    {
        Messages.Add(message);
    }

    public void UpdateMessage(SessionMessage message)
    {
        var match = Messages.Single(m => m.Id == message.Id);
        var index = Messages.IndexOf(match);
        Messages[index] = message;
    }
}