// <auto-generated/>
#pragma warning disable CS0618
using AITGraph.Sdk.Models.TermStore;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AITGraph.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Site : global::AITGraph.Sdk.Models.BaseItem, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Analytics about the view activities that took place in this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.ItemAnalytics? Analytics { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.ItemAnalytics Analytics { get; set; }
#endif
        /// <summary>The collection of column definitions reusable across lists under this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ColumnDefinition>? Columns { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ColumnDefinition> Columns { get; set; }
#endif
        /// <summary>The collection of content types defined for this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ContentType>? ContentTypes { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ContentType> ContentTypes { get; set; }
#endif
        /// <summary>The deleted property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.Deleted? Deleted { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.Deleted Deleted { get; set; }
#endif
        /// <summary>The full title for the site. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>The default drive (document library) for this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.Drive? Drive { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.Drive Drive { get; set; }
#endif
        /// <summary>The collection of drives (document libraries) under this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.Drive>? Drives { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.Drive> Drives { get; set; }
#endif
        /// <summary>The collection of column definitions available in the site that are referenced from the sites in the parent hierarchy of the current site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.ColumnDefinition>? ExternalColumns { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.ColumnDefinition> ExternalColumns { get; set; }
#endif
        /// <summary>The informationProtection property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.InformationProtection? InformationProtection { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.InformationProtection InformationProtection { get; set; }
#endif
        /// <summary>Used to address any item contained in this site. This collection cannot be enumerated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.BaseItem>? Items { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.BaseItem> Items { get; set; }
#endif
        /// <summary>The collection of lists under this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.List>? Lists { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.List> Lists { get; set; }
#endif
        /// <summary>The onenote property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.Onenote? Onenote { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.Onenote Onenote { get; set; }
#endif
        /// <summary>The collection of long running operations for the site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.RichLongRunningOperation>? Operations { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.RichLongRunningOperation> Operations { get; set; }
#endif
        /// <summary>The collection of pages in the SitePages list in this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.SitePage>? Pages { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.SitePage> Pages { get; set; }
#endif
        /// <summary>The permissions associated with the site. Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.Permission>? Permissions { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.Permission> Permissions { get; set; }
#endif
        /// <summary>If present, indicates that this is the root site in the site collection. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.Root? Root { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.Root Root { get; set; }
#endif
        /// <summary>The settings on this site. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.SiteSettings? Settings { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.SiteSettings Settings { get; set; }
#endif
        /// <summary>Returns identifiers useful for SharePoint REST compatibility. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.SharepointIds? SharepointIds { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.SharepointIds SharepointIds { get; set; }
#endif
        /// <summary>Provides details about the site&apos;s site collection. Available only on the root site. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.SiteCollection? SiteCollection { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.SiteCollection SiteCollection { get; set; }
#endif
        /// <summary>The collection of the sub-sites under this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.Site>? Sites { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.Site> Sites { get; set; }
#endif
        /// <summary>The termStore under this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.TermStore.Store? TermStore { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.TermStore.Store TermStore { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::AITGraph.Sdk.Models.Site"/> and sets the default values.
        /// </summary>
        public Site() : base()
        {
            OdataType = "#microsoft.graph.site";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AITGraph.Sdk.Models.Site"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::AITGraph.Sdk.Models.Site CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::AITGraph.Sdk.Models.Site();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "analytics", n => { Analytics = n.GetObjectValue<global::AITGraph.Sdk.Models.ItemAnalytics>(global::AITGraph.Sdk.Models.ItemAnalytics.CreateFromDiscriminatorValue); } },
                { "columns", n => { Columns = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ColumnDefinition>(global::AITGraph.Sdk.Models.ColumnDefinition.CreateFromDiscriminatorValue)?.AsList(); } },
                { "contentTypes", n => { ContentTypes = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ContentType>(global::AITGraph.Sdk.Models.ContentType.CreateFromDiscriminatorValue)?.AsList(); } },
                { "deleted", n => { Deleted = n.GetObjectValue<global::AITGraph.Sdk.Models.Deleted>(global::AITGraph.Sdk.Models.Deleted.CreateFromDiscriminatorValue); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "drive", n => { Drive = n.GetObjectValue<global::AITGraph.Sdk.Models.Drive>(global::AITGraph.Sdk.Models.Drive.CreateFromDiscriminatorValue); } },
                { "drives", n => { Drives = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.Drive>(global::AITGraph.Sdk.Models.Drive.CreateFromDiscriminatorValue)?.AsList(); } },
                { "externalColumns", n => { ExternalColumns = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.ColumnDefinition>(global::AITGraph.Sdk.Models.ColumnDefinition.CreateFromDiscriminatorValue)?.AsList(); } },
                { "informationProtection", n => { InformationProtection = n.GetObjectValue<global::AITGraph.Sdk.Models.InformationProtection>(global::AITGraph.Sdk.Models.InformationProtection.CreateFromDiscriminatorValue); } },
                { "items", n => { Items = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.BaseItem>(global::AITGraph.Sdk.Models.BaseItem.CreateFromDiscriminatorValue)?.AsList(); } },
                { "lists", n => { Lists = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.List>(global::AITGraph.Sdk.Models.List.CreateFromDiscriminatorValue)?.AsList(); } },
                { "onenote", n => { Onenote = n.GetObjectValue<global::AITGraph.Sdk.Models.Onenote>(global::AITGraph.Sdk.Models.Onenote.CreateFromDiscriminatorValue); } },
                { "operations", n => { Operations = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.RichLongRunningOperation>(global::AITGraph.Sdk.Models.RichLongRunningOperation.CreateFromDiscriminatorValue)?.AsList(); } },
                { "pages", n => { Pages = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.SitePage>(global::AITGraph.Sdk.Models.SitePage.CreateFromDiscriminatorValue)?.AsList(); } },
                { "permissions", n => { Permissions = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.Permission>(global::AITGraph.Sdk.Models.Permission.CreateFromDiscriminatorValue)?.AsList(); } },
                { "root", n => { Root = n.GetObjectValue<global::AITGraph.Sdk.Models.Root>(global::AITGraph.Sdk.Models.Root.CreateFromDiscriminatorValue); } },
                { "settings", n => { Settings = n.GetObjectValue<global::AITGraph.Sdk.Models.SiteSettings>(global::AITGraph.Sdk.Models.SiteSettings.CreateFromDiscriminatorValue); } },
                { "sharepointIds", n => { SharepointIds = n.GetObjectValue<global::AITGraph.Sdk.Models.SharepointIds>(global::AITGraph.Sdk.Models.SharepointIds.CreateFromDiscriminatorValue); } },
                { "siteCollection", n => { SiteCollection = n.GetObjectValue<global::AITGraph.Sdk.Models.SiteCollection>(global::AITGraph.Sdk.Models.SiteCollection.CreateFromDiscriminatorValue); } },
                { "sites", n => { Sites = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.Site>(global::AITGraph.Sdk.Models.Site.CreateFromDiscriminatorValue)?.AsList(); } },
                { "termStore", n => { TermStore = n.GetObjectValue<global::AITGraph.Sdk.Models.TermStore.Store>(global::AITGraph.Sdk.Models.TermStore.Store.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.ItemAnalytics>("analytics", Analytics);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ColumnDefinition>("columns", Columns);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ContentType>("contentTypes", ContentTypes);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.Deleted>("deleted", Deleted);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.Drive>("drive", Drive);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.Drive>("drives", Drives);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.ColumnDefinition>("externalColumns", ExternalColumns);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.InformationProtection>("informationProtection", InformationProtection);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.BaseItem>("items", Items);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.List>("lists", Lists);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.Onenote>("onenote", Onenote);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.RichLongRunningOperation>("operations", Operations);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.SitePage>("pages", Pages);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.Permission>("permissions", Permissions);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.Root>("root", Root);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.SiteSettings>("settings", Settings);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.SharepointIds>("sharepointIds", SharepointIds);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.SiteCollection>("siteCollection", SiteCollection);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.Site>("sites", Sites);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.TermStore.Store>("termStore", TermStore);
        }
    }
}
#pragma warning restore CS0618
