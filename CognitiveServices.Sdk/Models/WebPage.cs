// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CognitiveServices.Sdk.Models
{
    /// <summary>
    /// Defines a webpage that is relevant to the query.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    public partial class WebPage : global::CognitiveServices.Sdk.Models.CreativeWork, IParsable
    {
        /// <summary>The last time that Bing crawled the webpage. The date is in the form, YYYY-MM-DDTHH:MM:SS. For example, 2015-04-13T05:23:39.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DateLastCrawled { get; private set; }
#nullable restore
#else
        public string DateLastCrawled { get; private set; }
#endif
        /// <summary>A list of links to related content that Bing found in the website that contains this webpage. The Webpage object in this context includes only the name, url, urlPingSuffix, and snippet fields.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CognitiveServices.Sdk.Models.WebPage>? DeepLinks { get; private set; }
#nullable restore
#else
        public List<global::CognitiveServices.Sdk.Models.WebPage> DeepLinks { get; private set; }
#endif
        /// <summary>The display URL of the webpage. The URL is meant for display purposes only and is not well formed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayUrl { get; private set; }
#nullable restore
#else
        public string DisplayUrl { get; private set; }
#endif
        /// <summary>Defines an image</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CognitiveServices.Sdk.Models.ImageObject? PrimaryImageOfPage { get; set; }
#nullable restore
#else
        public global::CognitiveServices.Sdk.Models.ImageObject PrimaryImageOfPage { get; set; }
#endif
        /// <summary>A list of search tags that the webpage owner specified on the webpage. The API returns only indexed search tags. The name field of the MetaTag object contains the indexed search tag. Search tags begin with search.* (for example, search.assetId). The content field contains the tag&apos;s value.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CognitiveServices.Sdk.Models.WebMetaTag>? SearchTags { get; private set; }
#nullable restore
#else
        public List<global::CognitiveServices.Sdk.Models.WebMetaTag> SearchTags { get; private set; }
#endif
        /// <summary>A snippet of text from the webpage that describes its contents.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Snippet { get; private set; }
#nullable restore
#else
        public string Snippet { get; private set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CognitiveServices.Sdk.Models.WebPage"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::CognitiveServices.Sdk.Models.WebPage CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CognitiveServices.Sdk.Models.WebPage();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "dateLastCrawled", n => { DateLastCrawled = n.GetStringValue(); } },
                { "deepLinks", n => { DeepLinks = n.GetCollectionOfObjectValues<global::CognitiveServices.Sdk.Models.WebPage>(global::CognitiveServices.Sdk.Models.WebPage.CreateFromDiscriminatorValue)?.AsList(); } },
                { "displayUrl", n => { DisplayUrl = n.GetStringValue(); } },
                { "primaryImageOfPage", n => { PrimaryImageOfPage = n.GetObjectValue<global::CognitiveServices.Sdk.Models.ImageObject>(global::CognitiveServices.Sdk.Models.ImageObject.CreateFromDiscriminatorValue); } },
                { "searchTags", n => { SearchTags = n.GetCollectionOfObjectValues<global::CognitiveServices.Sdk.Models.WebMetaTag>(global::CognitiveServices.Sdk.Models.WebMetaTag.CreateFromDiscriminatorValue)?.AsList(); } },
                { "snippet", n => { Snippet = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::CognitiveServices.Sdk.Models.ImageObject>("primaryImageOfPage", PrimaryImageOfPage);
        }
    }
}
#pragma warning restore CS0618
