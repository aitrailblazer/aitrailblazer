// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CognitiveServices.Sdk.Models
{
    /// <summary>
    /// Defines an entity answer.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    public partial class Entities : global::CognitiveServices.Sdk.Models.SearchResultsAnswer, IParsable
    {
        /// <summary>The supported query scenario. This field is set to DominantEntity or DisambiguationItem. The field is set to DominantEntity if Bing determines that only a single entity satisfies the request. For example, a book, movie, person, or attraction. If multiple entities could satisfy the request, the field is set to DisambiguationItem. For example, if the request uses the generic title of a movie franchise, the entity&apos;s type would likely be DisambiguationItem. But, if the request specifies a specific title from the franchise, the entity&apos;s type would likely be DominantEntity.</summary>
        public global::CognitiveServices.Sdk.Models.Entities_queryScenario? QueryScenario { get; private set; }
        /// <summary>A list of entities.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CognitiveServices.Sdk.Models.Thing>? Value { get; set; }
#nullable restore
#else
        public List<global::CognitiveServices.Sdk.Models.Thing> Value { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::CognitiveServices.Sdk.Models.Entities"/> and sets the default values.
        /// </summary>
        public Entities() : base()
        {
            QueryScenario = global::CognitiveServices.Sdk.Models.Entities_queryScenario.DominantEntity;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CognitiveServices.Sdk.Models.Entities"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::CognitiveServices.Sdk.Models.Entities CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CognitiveServices.Sdk.Models.Entities();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "queryScenario", n => { QueryScenario = n.GetEnumValue<global::CognitiveServices.Sdk.Models.Entities_queryScenario>(); } },
                { "value", n => { Value = n.GetCollectionOfObjectValues<global::CognitiveServices.Sdk.Models.Thing>(global::CognitiveServices.Sdk.Models.Thing.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::CognitiveServices.Sdk.Models.Thing>("value", Value);
        }
    }
}
#pragma warning restore CS0618
