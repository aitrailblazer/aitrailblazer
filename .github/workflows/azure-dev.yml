on:
  workflow_dispatch:
  push:
    # Run when commits are pushed to mainline branch (main or master)
    # Set this to the mainline branch you are using
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ secrets.WEBFRONTEND_AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.WEBFRONTEND_AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.WEBFRONTEND_AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ secrets.AZURE_ENV_NAME }}
      AZURE_LOCATION: eastus2
      AZURE_CONTAINER_APPS_ENVIRONMENT_NAME: ${{ secrets.AZURE_CONTAINER_APPS_ENVIRONMENT_NAME }}
      AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN: ${{ secrets.AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN }}
      AZURE_CONTAINER_APPS_ENVIRONMENT_ID: ${{ secrets.AZURE_CONTAINER_APPS_ENVIRONMENT_ID }}
      AZURE_CONTAINER_REGISTRY_ENDPOINT: ${{ secrets.AZURE_CONTAINER_REGISTRY_ENDPOINT }}
      AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID: ${{ secrets.AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID }}
      AZURE_LOG_ANALYTICS_WORKSPACE_NAME: ${{ secrets.AZURE_LOG_ANALYTICS_WORKSPACE_NAME }}
      MANAGED_IDENTITY_CLIENT_ID: ${{ secrets.MANAGED_IDENTITY_CLIENT_ID }}
      MANAGED_IDENTITY_NAME: ${{ secrets.MANAGED_IDENTITY_NAME }}
      REGISTRY_PASSWORD: ${{ secrets.WEBFRONTEND_REGISTRY_PASSWORD }}
      REGISTRY_USERNAME: ${{ secrets.WEBFRONTEND_REGISTRY_USERNAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Install azd
        uses: Azure/setup-azd@v1.0.0

      - name: Install .NET Aspire workload
        run: dotnet workload install aspire

      - name: Log in with Azure (Federated Credentials)
        if: ${{ env.AZURE_CLIENT_ID != '' }}
        run: |
          azd auth login `
            --client-id "$Env:AZURE_CLIENT_ID" `
            --federated-credential-provider "github" `
            --tenant-id "$Env:AZURE_TENANT_ID"
        shell: pwsh

      - name: Log in with Azure (Client Credentials)
        if: ${{ env.AZURE_CREDENTIALS != '' }}
        run: |
          $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable;
          Write-Host "::add-mask::$($info.clientSecret)"

          azd auth login `
            --client-id "$($info.clientId)" `
            --client-secret "$($info.clientSecret)" `
            --tenant-id "$($info.tenantId)"
        shell: pwsh

      #- name: Provision Infrastructure
      #  run: azd provision --no-prompt
        # Required when 
        # env:
        #   AZD_INITIAL_ENVIRONMENT_CONFIG: ${{ secrets.AZD_INITIAL_ENVIRONMENT_CONFIG }}

      # Required when provisioning and deploying are defined in separate jobs.
      #- name: Refresh azd env (pulls latest infrastructure provision)
      # run: azd env refresh
      # env:
      #   AZURE_LOCATION: ${{ env.AZURE_LOCATION }}
    # Add this step
      - name: Set variables in azd environment
        run: |
          azd env set AZURE_LOCATION eastus2
          azd env set AZURE_SUBSCRIPTION_ID $AZURE_SUBSCRIPTION_ID
          azd env set AZURE_ENV_NAME $AZURE_ENV_NAME
          # Set other variables as needed
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_ENV_NAME: ${{ secrets.AZURE_ENV_NAME }}

      - name: Deploy Application
        run: |
          echo "AZURE_LOCATION: $AZURE_LOCATION"
          cd aitrailblazer.AppHost
          azd deploy --no-prompt
        env:
            AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
            AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
            AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            AZURE_ENV_NAME: ${{ secrets.AZURE_ENV_NAME }}
            AZURE_LOCATION: eastus2
            AZURE_CONTAINER_APPS_ENVIRONMENT_NAME: ${{ secrets.AZURE_CONTAINER_APPS_ENVIRONMENT_NAME }}
            AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN: ${{ secrets.AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN }}
            AZURE_CONTAINER_APPS_ENVIRONMENT_ID: ${{ secrets.AZURE_CONTAINER_APPS_ENVIRONMENT_ID }}
            AZURE_CONTAINER_REGISTRY_ENDPOINT: ${{ secrets.AZURE_CONTAINER_REGISTRY_ENDPOINT }}
            AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID: ${{ secrets.AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID }}
            AZURE_LOG_ANALYTICS_WORKSPACE_NAME: ${{ secrets.AZURE_LOG_ANALYTICS_WORKSPACE_NAME }}
            MANAGED_IDENTITY_CLIENT_ID: ${{ secrets.MANAGED_IDENTITY_CLIENT_ID }}
            MANAGED_IDENTITY_NAME: ${{ secrets.MANAGED_IDENTITY_NAME }}
            REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
            REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
            DOTNET_ROOT: /usr/share/dotnet