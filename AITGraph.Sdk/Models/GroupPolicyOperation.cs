// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AITGraph.Sdk.Models
{
    /// <summary>
    /// The entity represents an group policy operation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class GroupPolicyOperation : global::AITGraph.Sdk.Models.Entity, IParsable
    {
        /// <summary>The date and time the entity was last modified.</summary>
        public DateTimeOffset? LastModifiedDateTime { get; set; }
        /// <summary>Type of Group Policy operation status.</summary>
        public global::AITGraph.Sdk.Models.GroupPolicyOperationStatus? OperationStatus { get; set; }
        /// <summary>Type of Group Policy operation.</summary>
        public global::AITGraph.Sdk.Models.GroupPolicyOperationType? OperationType { get; set; }
        /// <summary>The group policy operation status detail.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StatusDetails { get; set; }
#nullable restore
#else
        public string StatusDetails { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AITGraph.Sdk.Models.GroupPolicyOperation"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::AITGraph.Sdk.Models.GroupPolicyOperation CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::AITGraph.Sdk.Models.GroupPolicyOperation();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "operationStatus", n => { OperationStatus = n.GetEnumValue<global::AITGraph.Sdk.Models.GroupPolicyOperationStatus>(); } },
                { "operationType", n => { OperationType = n.GetEnumValue<global::AITGraph.Sdk.Models.GroupPolicyOperationType>(); } },
                { "statusDetails", n => { StatusDetails = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteDateTimeOffsetValue("lastModifiedDateTime", LastModifiedDateTime);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.GroupPolicyOperationStatus>("operationStatus", OperationStatus);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.GroupPolicyOperationType>("operationType", OperationType);
            writer.WriteStringValue("statusDetails", StatusDetails);
        }
    }
}
#pragma warning restore CS0618
