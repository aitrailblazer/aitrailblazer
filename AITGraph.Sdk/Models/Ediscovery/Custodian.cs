// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AITGraph.Sdk.Models.Ediscovery
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Custodian : global::AITGraph.Sdk.Models.Ediscovery.DataSourceContainer, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Date and time the custodian acknowledged a hold notification.</summary>
        public DateTimeOffset? AcknowledgedDateTime { get; set; }
        /// <summary>Identifies whether a custodian&apos;s sources were placed on hold during creation.</summary>
        public bool? ApplyHoldToSources { get; set; }
        /// <summary>Email address of the custodian.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>Data source entity for SharePoint sites associated with the custodian.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.Ediscovery.SiteSource>? SiteSources { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.Ediscovery.SiteSource> SiteSources { get; set; }
#endif
        /// <summary>Data source entity for groups associated with the custodian.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.Ediscovery.UnifiedGroupSource>? UnifiedGroupSources { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.Ediscovery.UnifiedGroupSource> UnifiedGroupSources { get; set; }
#endif
        /// <summary>Data source entity for a the custodian. This is the container for a custodian&apos;s mailbox and OneDrive for Business site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.Ediscovery.UserSource>? UserSources { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.Ediscovery.UserSource> UserSources { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::AITGraph.Sdk.Models.Ediscovery.Custodian"/> and sets the default values.
        /// </summary>
        public Custodian() : base()
        {
            OdataType = "#microsoft.graph.ediscovery.custodian";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AITGraph.Sdk.Models.Ediscovery.Custodian"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::AITGraph.Sdk.Models.Ediscovery.Custodian CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::AITGraph.Sdk.Models.Ediscovery.Custodian();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "acknowledgedDateTime", n => { AcknowledgedDateTime = n.GetDateTimeOffsetValue(); } },
                { "applyHoldToSources", n => { ApplyHoldToSources = n.GetBoolValue(); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "siteSources", n => { SiteSources = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.Ediscovery.SiteSource>(global::AITGraph.Sdk.Models.Ediscovery.SiteSource.CreateFromDiscriminatorValue)?.AsList(); } },
                { "unifiedGroupSources", n => { UnifiedGroupSources = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.Ediscovery.UnifiedGroupSource>(global::AITGraph.Sdk.Models.Ediscovery.UnifiedGroupSource.CreateFromDiscriminatorValue)?.AsList(); } },
                { "userSources", n => { UserSources = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.Ediscovery.UserSource>(global::AITGraph.Sdk.Models.Ediscovery.UserSource.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteDateTimeOffsetValue("acknowledgedDateTime", AcknowledgedDateTime);
            writer.WriteBoolValue("applyHoldToSources", ApplyHoldToSources);
            writer.WriteStringValue("email", Email);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.Ediscovery.SiteSource>("siteSources", SiteSources);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.Ediscovery.UnifiedGroupSource>("unifiedGroupSources", UnifiedGroupSources);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.Ediscovery.UserSource>("userSources", UserSources);
        }
    }
}
#pragma warning restore CS0618
