// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AITGraph.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ProgramControl : global::AITGraph.Sdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The controlId of the control, in particular the identifier of an access review. Required on create.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ControlId { get; set; }
#nullable restore
#else
        public string ControlId { get; set; }
#endif
        /// <summary>The programControlType identifies the type of program control - for example, a control linking to guest access reviews. Required on create.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ControlTypeId { get; set; }
#nullable restore
#else
        public string ControlTypeId { get; set; }
#endif
        /// <summary>The creation date and time of the program control.</summary>
        public DateTimeOffset? CreatedDateTime { get; set; }
        /// <summary>The name of the control.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>The user who created the program control.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.UserIdentity? Owner { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.UserIdentity Owner { get; set; }
#endif
        /// <summary>The program this control is part of.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.Program? Program { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.Program Program { get; set; }
#endif
        /// <summary>The programId of the program this control is a part of. Required on create.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProgramId { get; set; }
#nullable restore
#else
        public string ProgramId { get; set; }
#endif
        /// <summary>The resource, a group or an app, targeted by this program control&apos;s access review.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.ProgramResource? Resource { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.ProgramResource Resource { get; set; }
#endif
        /// <summary>The life cycle status of the control.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status { get; set; }
#nullable restore
#else
        public string Status { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AITGraph.Sdk.Models.ProgramControl"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::AITGraph.Sdk.Models.ProgramControl CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::AITGraph.Sdk.Models.ProgramControl();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "controlId", n => { ControlId = n.GetStringValue(); } },
                { "controlTypeId", n => { ControlTypeId = n.GetStringValue(); } },
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "owner", n => { Owner = n.GetObjectValue<global::AITGraph.Sdk.Models.UserIdentity>(global::AITGraph.Sdk.Models.UserIdentity.CreateFromDiscriminatorValue); } },
                { "program", n => { Program = n.GetObjectValue<global::AITGraph.Sdk.Models.Program>(global::AITGraph.Sdk.Models.Program.CreateFromDiscriminatorValue); } },
                { "programId", n => { ProgramId = n.GetStringValue(); } },
                { "resource", n => { Resource = n.GetObjectValue<global::AITGraph.Sdk.Models.ProgramResource>(global::AITGraph.Sdk.Models.ProgramResource.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("controlId", ControlId);
            writer.WriteStringValue("controlTypeId", ControlTypeId);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.UserIdentity>("owner", Owner);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.Program>("program", Program);
            writer.WriteStringValue("programId", ProgramId);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.ProgramResource>("resource", Resource);
            writer.WriteStringValue("status", Status);
        }
    }
}
#pragma warning restore CS0618
