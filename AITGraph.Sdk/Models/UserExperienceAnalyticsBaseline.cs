// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AITGraph.Sdk.Models
{
    /// <summary>
    /// The user experience analytics baseline entity contains baseline values against which to compare the user experience analytics scores.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class UserExperienceAnalyticsBaseline : global::AITGraph.Sdk.Models.Entity, IParsable
    {
        /// <summary>The user experience analytics app health metrics.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory? AppHealthMetrics { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory AppHealthMetrics { get; set; }
#endif
        /// <summary>The user experience analytics battery health metrics.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory? BatteryHealthMetrics { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory BatteryHealthMetrics { get; set; }
#endif
        /// <summary>The user experience analytics best practices metrics.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory? BestPracticesMetrics { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory BestPracticesMetrics { get; set; }
#endif
        /// <summary>The date the custom baseline was created.</summary>
        public DateTimeOffset? CreatedDateTime { get; set; }
        /// <summary>The user experience analytics device boot performance metrics.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory? DeviceBootPerformanceMetrics { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory DeviceBootPerformanceMetrics { get; set; }
#endif
        /// <summary>The name of the user experience analytics baseline.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>Signifies if the current baseline is the commercial median baseline or a custom baseline.</summary>
        public bool? IsBuiltIn { get; set; }
        /// <summary>The user experience analytics reboot analytics metrics.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory? RebootAnalyticsMetrics { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory RebootAnalyticsMetrics { get; set; }
#endif
        /// <summary>The user experience analytics resource performance metrics.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory? ResourcePerformanceMetrics { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory ResourcePerformanceMetrics { get; set; }
#endif
        /// <summary>The user experience analytics work from anywhere metrics.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory? WorkFromAnywhereMetrics { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory WorkFromAnywhereMetrics { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AITGraph.Sdk.Models.UserExperienceAnalyticsBaseline"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::AITGraph.Sdk.Models.UserExperienceAnalyticsBaseline CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::AITGraph.Sdk.Models.UserExperienceAnalyticsBaseline();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "appHealthMetrics", n => { AppHealthMetrics = n.GetObjectValue<global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory>(global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory.CreateFromDiscriminatorValue); } },
                { "batteryHealthMetrics", n => { BatteryHealthMetrics = n.GetObjectValue<global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory>(global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory.CreateFromDiscriminatorValue); } },
                { "bestPracticesMetrics", n => { BestPracticesMetrics = n.GetObjectValue<global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory>(global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory.CreateFromDiscriminatorValue); } },
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "deviceBootPerformanceMetrics", n => { DeviceBootPerformanceMetrics = n.GetObjectValue<global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory>(global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory.CreateFromDiscriminatorValue); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "isBuiltIn", n => { IsBuiltIn = n.GetBoolValue(); } },
                { "rebootAnalyticsMetrics", n => { RebootAnalyticsMetrics = n.GetObjectValue<global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory>(global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory.CreateFromDiscriminatorValue); } },
                { "resourcePerformanceMetrics", n => { ResourcePerformanceMetrics = n.GetObjectValue<global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory>(global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory.CreateFromDiscriminatorValue); } },
                { "workFromAnywhereMetrics", n => { WorkFromAnywhereMetrics = n.GetObjectValue<global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory>(global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory>("appHealthMetrics", AppHealthMetrics);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory>("batteryHealthMetrics", BatteryHealthMetrics);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory>("bestPracticesMetrics", BestPracticesMetrics);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory>("deviceBootPerformanceMetrics", DeviceBootPerformanceMetrics);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteBoolValue("isBuiltIn", IsBuiltIn);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory>("rebootAnalyticsMetrics", RebootAnalyticsMetrics);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory>("resourcePerformanceMetrics", ResourcePerformanceMetrics);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.UserExperienceAnalyticsCategory>("workFromAnywhereMetrics", WorkFromAnywhereMetrics);
        }
    }
}
#pragma warning restore CS0618
