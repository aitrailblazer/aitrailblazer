// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AITGraph.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Entity : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The unique identifier for an entity. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The OdataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OdataType { get; set; }
#nullable restore
#else
        public string OdataType { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::AITGraph.Sdk.Models.Entity"/> and sets the default values.
        /// </summary>
        public Entity()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AITGraph.Sdk.Models.Entity"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::AITGraph.Sdk.Models.Entity CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.educationalActivity" => new global::AITGraph.Sdk.Models.EducationalActivity(),
                "#microsoft.graph.itemAddress" => new global::AITGraph.Sdk.Models.ItemAddress(),
                "#microsoft.graph.itemEmail" => new global::AITGraph.Sdk.Models.ItemEmail(),
                "#microsoft.graph.itemFacet" => new global::AITGraph.Sdk.Models.ItemFacet(),
                "#microsoft.graph.itemPatent" => new global::AITGraph.Sdk.Models.ItemPatent(),
                "#microsoft.graph.itemPhone" => new global::AITGraph.Sdk.Models.ItemPhone(),
                "#microsoft.graph.itemPublication" => new global::AITGraph.Sdk.Models.ItemPublication(),
                "#microsoft.graph.languageProficiency" => new global::AITGraph.Sdk.Models.LanguageProficiency(),
                "#microsoft.graph.personAnnotation" => new global::AITGraph.Sdk.Models.PersonAnnotation(),
                "#microsoft.graph.personAnnualEvent" => new global::AITGraph.Sdk.Models.PersonAnnualEvent(),
                "#microsoft.graph.personAward" => new global::AITGraph.Sdk.Models.PersonAward(),
                "#microsoft.graph.personCertification" => new global::AITGraph.Sdk.Models.PersonCertification(),
                "#microsoft.graph.personInterest" => new global::AITGraph.Sdk.Models.PersonInterest(),
                "#microsoft.graph.personName" => new global::AITGraph.Sdk.Models.PersonName(),
                "#microsoft.graph.personWebsite" => new global::AITGraph.Sdk.Models.PersonWebsite(),
                "#microsoft.graph.profile" => new global::AITGraph.Sdk.Models.Profile(),
                "#microsoft.graph.projectParticipation" => new global::AITGraph.Sdk.Models.ProjectParticipation(),
                "#microsoft.graph.skillProficiency" => new global::AITGraph.Sdk.Models.SkillProficiency(),
                "#microsoft.graph.userAccountInformation" => new global::AITGraph.Sdk.Models.UserAccountInformation(),
                "#microsoft.graph.webAccount" => new global::AITGraph.Sdk.Models.WebAccount(),
                "#microsoft.graph.workPosition" => new global::AITGraph.Sdk.Models.WorkPosition(),
                _ => new global::AITGraph.Sdk.Models.Entity(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "id", n => { Id = n.GetStringValue(); } },
                { "@odata.type", n => { OdataType = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("@odata.type", OdataType);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
