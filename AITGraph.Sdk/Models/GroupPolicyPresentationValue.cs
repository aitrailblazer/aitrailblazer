// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AITGraph.Sdk.Models
{
    /// <summary>
    /// The base presentation value entity that stores the value for a single group policy presentation.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class GroupPolicyPresentationValue : global::AITGraph.Sdk.Models.Entity, IParsable
    {
        /// <summary>The date and time the object was created.</summary>
        public DateTimeOffset? CreatedDateTime { get; set; }
        /// <summary>The group policy definition value associated with the presentation value.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.GroupPolicyDefinitionValue? DefinitionValue { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.GroupPolicyDefinitionValue DefinitionValue { get; set; }
#endif
        /// <summary>The date and time the object was last modified.</summary>
        public DateTimeOffset? LastModifiedDateTime { get; set; }
        /// <summary>The group policy presentation associated with the presentation value.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.GroupPolicyPresentation? Presentation { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.GroupPolicyPresentation Presentation { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AITGraph.Sdk.Models.GroupPolicyPresentationValue"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::AITGraph.Sdk.Models.GroupPolicyPresentationValue CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.groupPolicyPresentationValueBoolean" => new global::AITGraph.Sdk.Models.GroupPolicyPresentationValueBoolean(),
                "#microsoft.graph.groupPolicyPresentationValueDecimal" => new global::AITGraph.Sdk.Models.GroupPolicyPresentationValueDecimal(),
                "#microsoft.graph.groupPolicyPresentationValueList" => new global::AITGraph.Sdk.Models.GroupPolicyPresentationValueList(),
                "#microsoft.graph.groupPolicyPresentationValueLongDecimal" => new global::AITGraph.Sdk.Models.GroupPolicyPresentationValueLongDecimal(),
                "#microsoft.graph.groupPolicyPresentationValueMultiText" => new global::AITGraph.Sdk.Models.GroupPolicyPresentationValueMultiText(),
                "#microsoft.graph.groupPolicyPresentationValueText" => new global::AITGraph.Sdk.Models.GroupPolicyPresentationValueText(),
                _ => new global::AITGraph.Sdk.Models.GroupPolicyPresentationValue(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "definitionValue", n => { DefinitionValue = n.GetObjectValue<global::AITGraph.Sdk.Models.GroupPolicyDefinitionValue>(global::AITGraph.Sdk.Models.GroupPolicyDefinitionValue.CreateFromDiscriminatorValue); } },
                { "lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "presentation", n => { Presentation = n.GetObjectValue<global::AITGraph.Sdk.Models.GroupPolicyPresentation>(global::AITGraph.Sdk.Models.GroupPolicyPresentation.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.GroupPolicyDefinitionValue>("definitionValue", DefinitionValue);
            writer.WriteDateTimeOffsetValue("lastModifiedDateTime", LastModifiedDateTime);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.GroupPolicyPresentation>("presentation", Presentation);
        }
    }
}
#pragma warning restore CS0618
