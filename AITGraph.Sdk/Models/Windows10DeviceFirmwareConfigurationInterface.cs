// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AITGraph.Sdk.Models
{
    /// <summary>
    /// Graph properties for Device Firmware Configuration Interface 
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Windows10DeviceFirmwareConfigurationInterface : global::AITGraph.Sdk.Models.DeviceConfiguration, IParsable
    {
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? Bluetooth { get; set; }
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? BootFromBuiltInNetworkAdapters { get; set; }
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? BootFromExternalMedia { get; set; }
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? Cameras { get; set; }
        /// <summary>Defines the permission level granted to users to enable them change Uefi settings</summary>
        public global::AITGraph.Sdk.Models.ChangeUefiSettingsPermission? ChangeUefiSettingsPermission { get; set; }
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? FrontCamera { get; set; }
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? InfraredCamera { get; set; }
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? Microphone { get; set; }
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? MicrophonesAndSpeakers { get; set; }
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? NearFieldCommunication { get; set; }
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? Radios { get; set; }
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? RearCamera { get; set; }
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? SdCard { get; set; }
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? SimultaneousMultiThreading { get; set; }
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? UsbTypeAPort { get; set; }
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? VirtualizationOfCpuAndIO { get; set; }
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? WakeOnLAN { get; set; }
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? WakeOnPower { get; set; }
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? WiFi { get; set; }
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? WindowsPlatformBinaryTable { get; set; }
        /// <summary>Possible values of a property</summary>
        public global::AITGraph.Sdk.Models.Enablement? WirelessWideAreaNetwork { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::AITGraph.Sdk.Models.Windows10DeviceFirmwareConfigurationInterface"/> and sets the default values.
        /// </summary>
        public Windows10DeviceFirmwareConfigurationInterface() : base()
        {
            OdataType = "#microsoft.graph.windows10DeviceFirmwareConfigurationInterface";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AITGraph.Sdk.Models.Windows10DeviceFirmwareConfigurationInterface"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::AITGraph.Sdk.Models.Windows10DeviceFirmwareConfigurationInterface CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::AITGraph.Sdk.Models.Windows10DeviceFirmwareConfigurationInterface();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "bluetooth", n => { Bluetooth = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
                { "bootFromBuiltInNetworkAdapters", n => { BootFromBuiltInNetworkAdapters = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
                { "bootFromExternalMedia", n => { BootFromExternalMedia = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
                { "cameras", n => { Cameras = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
                { "changeUefiSettingsPermission", n => { ChangeUefiSettingsPermission = n.GetEnumValue<global::AITGraph.Sdk.Models.ChangeUefiSettingsPermission>(); } },
                { "frontCamera", n => { FrontCamera = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
                { "infraredCamera", n => { InfraredCamera = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
                { "microphone", n => { Microphone = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
                { "microphonesAndSpeakers", n => { MicrophonesAndSpeakers = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
                { "nearFieldCommunication", n => { NearFieldCommunication = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
                { "radios", n => { Radios = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
                { "rearCamera", n => { RearCamera = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
                { "sdCard", n => { SdCard = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
                { "simultaneousMultiThreading", n => { SimultaneousMultiThreading = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
                { "usbTypeAPort", n => { UsbTypeAPort = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
                { "virtualizationOfCpuAndIO", n => { VirtualizationOfCpuAndIO = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
                { "wakeOnLAN", n => { WakeOnLAN = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
                { "wakeOnPower", n => { WakeOnPower = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
                { "wiFi", n => { WiFi = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
                { "windowsPlatformBinaryTable", n => { WindowsPlatformBinaryTable = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
                { "wirelessWideAreaNetwork", n => { WirelessWideAreaNetwork = n.GetEnumValue<global::AITGraph.Sdk.Models.Enablement>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("bluetooth", Bluetooth);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("bootFromBuiltInNetworkAdapters", BootFromBuiltInNetworkAdapters);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("bootFromExternalMedia", BootFromExternalMedia);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("cameras", Cameras);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.ChangeUefiSettingsPermission>("changeUefiSettingsPermission", ChangeUefiSettingsPermission);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("frontCamera", FrontCamera);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("infraredCamera", InfraredCamera);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("microphone", Microphone);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("microphonesAndSpeakers", MicrophonesAndSpeakers);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("nearFieldCommunication", NearFieldCommunication);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("radios", Radios);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("rearCamera", RearCamera);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("sdCard", SdCard);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("simultaneousMultiThreading", SimultaneousMultiThreading);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("usbTypeAPort", UsbTypeAPort);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("virtualizationOfCpuAndIO", VirtualizationOfCpuAndIO);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("wakeOnLAN", WakeOnLAN);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("wakeOnPower", WakeOnPower);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("wiFi", WiFi);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("windowsPlatformBinaryTable", WindowsPlatformBinaryTable);
            writer.WriteEnumValue<global::AITGraph.Sdk.Models.Enablement>("wirelessWideAreaNetwork", WirelessWideAreaNetwork);
        }
    }
}
#pragma warning restore CS0618
