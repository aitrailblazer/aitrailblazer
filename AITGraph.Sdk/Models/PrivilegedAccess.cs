// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AITGraph.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PrivilegedAccess : global::AITGraph.Sdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The display name of the provider managed by PIM.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>A collection of resources for the provider.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.GovernanceResource>? Resources { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.GovernanceResource> Resources { get; set; }
#endif
        /// <summary>A collection of role assignment requests for the provider.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.GovernanceRoleAssignmentRequest>? RoleAssignmentRequests { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.GovernanceRoleAssignmentRequest> RoleAssignmentRequests { get; set; }
#endif
        /// <summary>A collection of role assignments for the provider.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.GovernanceRoleAssignment>? RoleAssignments { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.GovernanceRoleAssignment> RoleAssignments { get; set; }
#endif
        /// <summary>A collection of role defintions for the provider.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.GovernanceRoleDefinition>? RoleDefinitions { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.GovernanceRoleDefinition> RoleDefinitions { get; set; }
#endif
        /// <summary>A collection of role settings for the provider.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.GovernanceRoleSetting>? RoleSettings { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.GovernanceRoleSetting> RoleSettings { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AITGraph.Sdk.Models.PrivilegedAccess"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::AITGraph.Sdk.Models.PrivilegedAccess CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::AITGraph.Sdk.Models.PrivilegedAccess();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "resources", n => { Resources = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.GovernanceResource>(global::AITGraph.Sdk.Models.GovernanceResource.CreateFromDiscriminatorValue)?.AsList(); } },
                { "roleAssignmentRequests", n => { RoleAssignmentRequests = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.GovernanceRoleAssignmentRequest>(global::AITGraph.Sdk.Models.GovernanceRoleAssignmentRequest.CreateFromDiscriminatorValue)?.AsList(); } },
                { "roleAssignments", n => { RoleAssignments = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.GovernanceRoleAssignment>(global::AITGraph.Sdk.Models.GovernanceRoleAssignment.CreateFromDiscriminatorValue)?.AsList(); } },
                { "roleDefinitions", n => { RoleDefinitions = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.GovernanceRoleDefinition>(global::AITGraph.Sdk.Models.GovernanceRoleDefinition.CreateFromDiscriminatorValue)?.AsList(); } },
                { "roleSettings", n => { RoleSettings = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.GovernanceRoleSetting>(global::AITGraph.Sdk.Models.GovernanceRoleSetting.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.GovernanceResource>("resources", Resources);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.GovernanceRoleAssignmentRequest>("roleAssignmentRequests", RoleAssignmentRequests);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.GovernanceRoleAssignment>("roleAssignments", RoleAssignments);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.GovernanceRoleDefinition>("roleDefinitions", RoleDefinitions);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.GovernanceRoleSetting>("roleSettings", RoleSettings);
        }
    }
}
#pragma warning restore CS0618
