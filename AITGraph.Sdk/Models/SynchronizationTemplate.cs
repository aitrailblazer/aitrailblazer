// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AITGraph.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SynchronizationTemplate : global::AITGraph.Sdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Identifier of the application this template belongs to.</summary>
        public Guid? ApplicationId { get; set; }
        /// <summary>true if this template is recommended to be the default for the application.</summary>
        public bool? Default { get; set; }
        /// <summary>Description of the template.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>true if this template should appear in the collection of templates available for the application instance (service principal).</summary>
        public bool? Discoverable { get; set; }
        /// <summary>One of the well-known factory tags supported by the synchronization engine. The factoryTag tells the synchronization engine which implementation to use when processing jobs based on this template.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FactoryTag { get; set; }
#nullable restore
#else
        public string FactoryTag { get; set; }
#endif
        /// <summary>Additional extension properties. Unless mentioned explicitly, metadata values should not be changed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.MetadataEntry>? Metadata { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.MetadataEntry> Metadata { get; set; }
#endif
        /// <summary>Default synchronization schema for the jobs based on this template.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AITGraph.Sdk.Models.SynchronizationSchema? Schema { get; set; }
#nullable restore
#else
        public global::AITGraph.Sdk.Models.SynchronizationSchema Schema { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AITGraph.Sdk.Models.SynchronizationTemplate"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::AITGraph.Sdk.Models.SynchronizationTemplate CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::AITGraph.Sdk.Models.SynchronizationTemplate();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "applicationId", n => { ApplicationId = n.GetGuidValue(); } },
                { "default", n => { Default = n.GetBoolValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "discoverable", n => { Discoverable = n.GetBoolValue(); } },
                { "factoryTag", n => { FactoryTag = n.GetStringValue(); } },
                { "metadata", n => { Metadata = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.MetadataEntry>(global::AITGraph.Sdk.Models.MetadataEntry.CreateFromDiscriminatorValue)?.AsList(); } },
                { "schema", n => { Schema = n.GetObjectValue<global::AITGraph.Sdk.Models.SynchronizationSchema>(global::AITGraph.Sdk.Models.SynchronizationSchema.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteGuidValue("applicationId", ApplicationId);
            writer.WriteBoolValue("default", Default);
            writer.WriteStringValue("description", Description);
            writer.WriteBoolValue("discoverable", Discoverable);
            writer.WriteStringValue("factoryTag", FactoryTag);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.MetadataEntry>("metadata", Metadata);
            writer.WriteObjectValue<global::AITGraph.Sdk.Models.SynchronizationSchema>("schema", Schema);
        }
    }
}
#pragma warning restore CS0618
