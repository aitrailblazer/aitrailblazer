// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CognitiveServices.Sdk.Models
{
    /// <summary>
    /// Defines additional information about an entity such as type hints.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    public partial class EntitiesEntityPresentationInfo : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The supported scenario.</summary>
        public global::CognitiveServices.Sdk.Models.EntitiesEntityPresentationInfo_entityScenario? EntityScenario { get; set; }
        /// <summary>A display version of the entity hint. For example, if entityTypeHints is Artist, this field may be set to American Singer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EntityTypeDisplayHint { get; private set; }
#nullable restore
#else
        public string EntityTypeDisplayHint { get; private set; }
#endif
        /// <summary>A list of hints that indicate the entity&apos;s type. The list could contain a single hint such as Movie or a list of hints such as Place, LocalBusiness, Restaurant. Each successive hint in the array narrows the entity&apos;s type.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CognitiveServices.Sdk.Models.EntitiesEntityPresentationInfo_entityTypeHints?>? EntityTypeHints { get; private set; }
#nullable restore
#else
        public List<global::CognitiveServices.Sdk.Models.EntitiesEntityPresentationInfo_entityTypeHints?> EntityTypeHints { get; private set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::CognitiveServices.Sdk.Models.EntitiesEntityPresentationInfo"/> and sets the default values.
        /// </summary>
        public EntitiesEntityPresentationInfo()
        {
            AdditionalData = new Dictionary<string, object>();
            EntityScenario = global::CognitiveServices.Sdk.Models.EntitiesEntityPresentationInfo_entityScenario.DominantEntity;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CognitiveServices.Sdk.Models.EntitiesEntityPresentationInfo"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CognitiveServices.Sdk.Models.EntitiesEntityPresentationInfo CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CognitiveServices.Sdk.Models.EntitiesEntityPresentationInfo();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "entityScenario", n => { EntityScenario = n.GetEnumValue<global::CognitiveServices.Sdk.Models.EntitiesEntityPresentationInfo_entityScenario>(); } },
                { "entityTypeDisplayHint", n => { EntityTypeDisplayHint = n.GetStringValue(); } },
                { "entityTypeHints", n => { EntityTypeHints = n.GetCollectionOfEnumValues<global::CognitiveServices.Sdk.Models.EntitiesEntityPresentationInfo_entityTypeHints>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::CognitiveServices.Sdk.Models.EntitiesEntityPresentationInfo_entityScenario>("entityScenario", EntityScenario);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
