// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CognitiveServices.Sdk.Models
{
    /// <summary>
    /// Defines a response. All schemas that could be returned at the root of a response should inherit from this
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    public partial class Response : global::CognitiveServices.Sdk.Models.Identifiable, IParsable
    {
        /// <summary>A list of rules that you must adhere to if you display the item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CognitiveServices.Sdk.Models.ContractualRulesContractualRule>? ContractualRules { get; private set; }
#nullable restore
#else
        public List<global::CognitiveServices.Sdk.Models.ContractualRulesContractualRule> ContractualRules { get; private set; }
#endif
        /// <summary>The URL To Bing&apos;s search result for this item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebSearchUrl { get; private set; }
#nullable restore
#else
        public string WebSearchUrl { get; private set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CognitiveServices.Sdk.Models.Response"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::CognitiveServices.Sdk.Models.Response CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("_type")?.GetStringValue();
            return mappingValue switch
            {
                "Airport" => new global::CognitiveServices.Sdk.Models.Airport(),
                "Answer" => new global::CognitiveServices.Sdk.Models.Answer(),
                "CivicStructure" => new global::CognitiveServices.Sdk.Models.CivicStructure(),
                "CreativeWork" => new global::CognitiveServices.Sdk.Models.CreativeWork(),
                "EntertainmentBusiness" => new global::CognitiveServices.Sdk.Models.EntertainmentBusiness(),
                "Entities" => new global::CognitiveServices.Sdk.Models.Entities(),
                "FoodEstablishment" => new global::CognitiveServices.Sdk.Models.FoodEstablishment(),
                "Hotel" => new global::CognitiveServices.Sdk.Models.Hotel(),
                "ImageObject" => new global::CognitiveServices.Sdk.Models.ImageObject(),
                "License" => new global::CognitiveServices.Sdk.Models.License(),
                "LocalBusiness" => new global::CognitiveServices.Sdk.Models.LocalBusiness(),
                "LodgingBusiness" => new global::CognitiveServices.Sdk.Models.LodgingBusiness(),
                "MediaObject" => new global::CognitiveServices.Sdk.Models.MediaObject(),
                "MovieTheater" => new global::CognitiveServices.Sdk.Models.MovieTheater(),
                "Organization" => new global::CognitiveServices.Sdk.Models.Organization(),
                "Place" => new global::CognitiveServices.Sdk.Models.Place(),
                "Places" => new global::CognitiveServices.Sdk.Models.Places(),
                "PostalAddress" => new global::CognitiveServices.Sdk.Models.PostalAddress(),
                "Restaurant" => new global::CognitiveServices.Sdk.Models.Restaurant(),
                "SearchResponse" => new global::CognitiveServices.Sdk.Models.SearchResponse(),
                "SearchResultsAnswer" => new global::CognitiveServices.Sdk.Models.SearchResultsAnswer(),
                "StructuredValue" => new global::CognitiveServices.Sdk.Models.StructuredValue(),
                "Thing" => new global::CognitiveServices.Sdk.Models.Thing(),
                "TouristAttraction" => new global::CognitiveServices.Sdk.Models.TouristAttraction(),
                _ => new global::CognitiveServices.Sdk.Models.Response(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "contractualRules", n => { ContractualRules = n.GetCollectionOfObjectValues<global::CognitiveServices.Sdk.Models.ContractualRulesContractualRule>(global::CognitiveServices.Sdk.Models.ContractualRulesContractualRule.CreateFromDiscriminatorValue)?.AsList(); } },
                { "webSearchUrl", n => { WebSearchUrl = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
        }
    }
}
#pragma warning restore CS0618
