// <auto-generated/>
#pragma warning disable CS0618
using AITGraph.Sdk.Models.Search;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AITGraph.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SearchEntity : global::AITGraph.Sdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Administrative answer in Microsoft Search results to define common acronyms in a organization.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.Search.Acronym>? Acronyms { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.Search.Acronym> Acronyms { get; set; }
#endif
        /// <summary>Administrative answer in Microsoft Search results for common search queries in an organization.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.Search.Bookmark>? Bookmarks { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.Search.Bookmark> Bookmarks { get; set; }
#endif
        /// <summary>Administrative answer in Microsoft Search results which provide answers for specific search keywords in an organization.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::AITGraph.Sdk.Models.Search.Qna>? Qnas { get; set; }
#nullable restore
#else
        public List<global::AITGraph.Sdk.Models.Search.Qna> Qnas { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AITGraph.Sdk.Models.SearchEntity"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::AITGraph.Sdk.Models.SearchEntity CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::AITGraph.Sdk.Models.SearchEntity();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "acronyms", n => { Acronyms = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.Search.Acronym>(global::AITGraph.Sdk.Models.Search.Acronym.CreateFromDiscriminatorValue)?.AsList(); } },
                { "bookmarks", n => { Bookmarks = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.Search.Bookmark>(global::AITGraph.Sdk.Models.Search.Bookmark.CreateFromDiscriminatorValue)?.AsList(); } },
                { "qnas", n => { Qnas = n.GetCollectionOfObjectValues<global::AITGraph.Sdk.Models.Search.Qna>(global::AITGraph.Sdk.Models.Search.Qna.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.Search.Acronym>("acronyms", Acronyms);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.Search.Bookmark>("bookmarks", Bookmarks);
            writer.WriteCollectionOfObjectValues<global::AITGraph.Sdk.Models.Search.Qna>("qnas", Qnas);
        }
    }
}
#pragma warning restore CS0618
